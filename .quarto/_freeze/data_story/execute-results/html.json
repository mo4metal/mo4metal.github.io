{
  "hash": "4d2f90f34ed21dee175471be540d3a44",
  "result": {
    "markdown": "---\ntitle: \"Data Story\"\n---\n\n\n# NBC's \"Community\" Data Analysis\n\n## Episode Summaries\n\nSelect an episode to learn more about it!\n\n\n```{=html}\n<iframe height=\"400\" width=\"100%\" frameborder=\"no\" src=\"https://mo4metal.shinyapps.io/episode_search/\"> </iframe>\n```\n\n\n## IMDb Ratings for Community episodes (all seasons)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\ncommunity <- read_csv(\"Community.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 109 Columns: 14\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(4): title, directed_by, written_by, desc dbl (9): ...1, season,\nepisode_num_in_season, episode_num_overall, prod_cod... date (1):\noriginal_air_date\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\ncommunity_data <- community %>% select(-c(\"episode_num\"))\nlibrary(shiny)\nlibrary(ggplot2)\n\nseason_colors <- c(\"1\" = \"blue\",\n                   \"2\" = \"green\",\n                   \"3\" = \"red\",\n                   \"4\" = \"orange\",\n                   \"5\" = \"purple\",\n                   \"6\" = \"black\")\n\n\nggplot(community_data, aes(x = episode_num_overall, y = imdb_rating, color = as.factor(season))) +\n  geom_point() +\n  scale_color_manual(values = season_colors) +\n  labs(x = \"Episode\", \n       y = \"IMDb Rating\", \n       title = \"IMDb Ratings for Community episodes\", color = \"Season\") +\n  theme(plot.margin = margin(r = 2, unit = \"cm\"))\n```\n\n::: {.cell-output-display}\n![](data_story_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n## IMDB Ratings Against Viewership\n\n\n```{=html}\n<iframe height=\"400\" width=\"100%\" frameborder=\"no\" src=\"https://mo4metal.shinyapps.io/imdb_viewership/\"> </iframe>\n```\n",
    "supporting": [
      "data_story_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}